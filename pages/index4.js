import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react';
import Tareas from "../components/Tareas"
import { useEffect } from 'react';
import cookie from "js-cookie";
import Script from 'next/script';
import Header from "../components/header"
import CrearTarea from '@/components/CrearTarea';

export default function Home() {


    const [arrayObjetos, setArrayObjetos] = useState([]);
    const [nombre, setNombre] = useState('');
    const [descripcion, setDescripcion] = useState('');
    const [descripcionSubtarea, setDescripcionSubtarea] = useState("");

    const cookieValue = cookie.get("cookie");

    useEffect(() => {
        if (cookieValue) {
            const parsed = JSON.parse(cookieValue);
            setArrayObjetos(parsed);
        } else {
            console.log("cookie vacÃ­a o no existe");
        }
    }, []);

    useEffect(() => {
        cookie.set("cookie", JSON.stringify(arrayObjetos));
    }, [arrayObjetos]);

    function deleteCookies() {
        cookie.remove('cookie');
    }

    const handleSubmit = (e) => {
        e.preventDefault();
        const nuevoObjeto = { nombre, descripcion, openTask: true, susbtareas: [] };
        setArrayObjetos([...arrayObjetos, nuevoObjeto]);
        setNombre('');
        setDescripcion('');
        console.log(arrayObjetos)
    }

    //Subtareas
    const handleAddAndSubmitSubtarea = (e, index) => {
        e.preventDefault();
        const newArrayObjetos = [...arrayObjetos];
        if (!newArrayObjetos[index].subtareas) {
            newArrayObjetos[index].subtareas = [];
        }
        newArrayObjetos[index].subtareas.push({ descripcion: descripcionSubtarea });
        setArrayObjetos(newArrayObjetos);
        setDescripcionSubtarea("");
    }

    const handleDeleteSubtarea = (indexParent, indexSubtarea) => {
        const newArrayObjetos = [...arrayObjetos];
        newArrayObjetos[indexParent].subtareas.splice(indexSubtarea, 1);
        setArrayObjetos(newArrayObjetos);
        cookie.set("cookie", JSON.stringify(arrayObjetos));
    }


    const handleChangeOpenTask = (index) => {
        const newArrayObjetos = [...arrayObjetos];
        newArrayObjetos[index].openTask = !newArrayObjetos[index].openTask;
        setArrayObjetos(newArrayObjetos);
    }

    const handleDelete = (index) => {
        const newArrayObjetos = [...arrayObjetos];
        newArrayObjetos.splice(index, 1);
        setArrayObjetos(newArrayObjetos);
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <main>


                <section
                    className="d-flex flex-row align-items-start"
                    style={{
                        paddingLeft: "var(--padding-l-t3)",
                        paddingRight: "var(--padding-r-t3)",
                        minHeight: 500,
                        paddingTop: 60,
                        paddingBottom: 100
                    }}
                >
                    <div className="d-flex flex-column" style={{ width: "100%", gap: 40 }}>
                        <div className="d-flex justify-content-between align-items-center">
                            <h1 className="titulo2">Mis tareas</h1>
                            <button
                                className="btn btn-primary btn1"
                                id="abrir-crearTarea"
                                type="button"
                            >
                                AÃ±adir nueva tarea
                            </button>
                        </div>



                   

                        <Tareas objetos={arrayObjetos} onDeleteSubtarea={handleDeleteSubtarea} onChangeOpenTask={handleChangeOpenTask} onDelete={handleDelete} descripcionSubtarea={descripcionSubtarea} setDescripcionSubtarea={setDescripcionSubtarea} handleAddAndSubmitSubtarea={handleAddAndSubmitSubtarea} />




                    </div>
                </section>



                <section
                    className="flex-row justify-content-center align-items-center fixedBox"
                    id="box-crearTarea"
                >
                    <div
                        className="d-flex flex-column"
                        style={{ background: "#fff", padding: 40, borderRadius: 20, gap: 24 }}
                    >
                        <div>
                            <h1 className="titulo3">Creemos una tarea ðŸ¤¯</h1>
                        </div>
                        <form
                            onSubmit={handleSubmit}
                            className="d-flex flex-column align-items-start"
                            style={{ gap: 16 }}
                        >
                            <div className="d-flex" style={{ gap: 8 }}>
                                <input
                                    className="form-control inputStyle"
                                    type="text"
                                    placeholder="Ingresa el tÃ­tulo"
                                    value={nombre} onChange={e => setNombre(e.target.value)}
                                />
                                <input
                                    className="form-control inputStyle"
                                    type="text"
                                    placeholder="Ingresa la descripciÃ³n"
                                    value={descripcion} onChange={e => setDescripcion(e.target.value)}
                                />
                            </div>
                            <div className="d-flex" style={{ gap: 8 }}>
                                <button
                                    className="btn btn-primary btn1"
                                    id="crearTareaBtn"
                                    type="submit"
                                >
                                    Crear tarea
                                </button>
                                <button
                                    className="btn btn-primary btn2"
                                    id="cerrar-crearTarea"
                                    type="button"
                                >
                                    Cancelar
                                </button>
                            </div>
                        </form>
                    </div>
                </section>



                <Script src="../assets/js/crearTarea.js" />
                <Script src="../assets/bootstrap/js/bootstrap.min.js" />

            </main>
        </>
    )
}



