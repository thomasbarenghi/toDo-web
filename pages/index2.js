import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react';
import Tareas from "../components/TareasOriginal"
import { useEffect } from 'react';
import cookie from "js-cookie";

export default function Home() {


    const [arrayObjetos, setArrayObjetos] = useState([]);
    const [nombre, setNombre] = useState('');
    const [descripcion, setDescripcion] = useState('');
    const [descripcionSubtarea, setDescripcionSubtarea] = useState("");

    const cookieValue = cookie.get("cookie");

    useEffect(() => {
        if (cookieValue) {
            const parsed = JSON.parse(cookieValue);
            setArrayObjetos(parsed);
        } else {
            console.log("cookie vacÃ­a o no existe");
        }
    }, []);

    useEffect(() => {
        cookie.set("cookie", JSON.stringify(arrayObjetos));
    }, [arrayObjetos]);

    function deleteCookies() {
        cookie.remove('cookie');
    }

    const handleSubmit = (e) => {
        e.preventDefault();
        const nuevoObjeto = { nombre, descripcion, openTask: true, susbtareas: [] };
        setArrayObjetos([...arrayObjetos, nuevoObjeto]);
        setNombre('');
        setDescripcion('');
        console.log(arrayObjetos)
    }


    //Subtareas
    const handleAddAndSubmitSubtarea = (e, index) => {
        e.preventDefault();
        const newArrayObjetos = [...arrayObjetos];
        if (!newArrayObjetos[index].subtareas) {
            newArrayObjetos[index].subtareas = [];
        }
        newArrayObjetos[index].subtareas.push({ descripcion: descripcionSubtarea });
        setArrayObjetos(newArrayObjetos);
        setDescripcionSubtarea("");
    }


    

    const handleDeleteSubtarea = (indexParent, indexSubtarea) => {
        const newArrayObjetos = [...arrayObjetos];
        newArrayObjetos[indexParent].subtareas.splice(indexSubtarea, 1);
        setArrayObjetos(newArrayObjetos);
        cookie.set("cookie",JSON.stringify(arrayObjetos));
    }



    const handleChangeOpenTask = (index) => {
        const newArrayObjetos = [...arrayObjetos];
        newArrayObjetos[index].openTask = !newArrayObjetos[index].openTask;
        setArrayObjetos(newArrayObjetos);
    }

    const handleDelete = (index) => {
        const newArrayObjetos = [...arrayObjetos];
        newArrayObjetos.splice(index, 1);
        setArrayObjetos(newArrayObjetos);
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <section>
                    <div>
                        <div>
                            <h1>Todo app</h1>
                            <button onClick={deleteCookies} >Borrar cookies</button>
                            <div>


                                <form onSubmit={handleSubmit}>
                                    <label>
                                        Nombre:
                                        <input type="text" value={nombre} onChange={e => setNombre(e.target.value)} />
                                    </label>
                                    <label>
                                        Descripcion:
                                        <input type="text" value={descripcion} onChange={e => setDescripcion(e.target.value)} />
                                    </label>
                                    <button type="submit">Agregar</button>

                                </form>


                            </div>
                        </div>
                        <div id="containerComponentes">



                        <Tareas objetos={arrayObjetos} onDeleteSubtarea={handleDeleteSubtarea} onChangeOpenTask={handleChangeOpenTask} onDelete={handleDelete} descripcionSubtarea={descripcionSubtarea} setDescripcionSubtarea={setDescripcionSubtarea} handleAddAndSubmitSubtarea={handleAddAndSubmitSubtarea} />

                        </div>
                    </div>
                </section>
            </main>
        </>
    )
}



